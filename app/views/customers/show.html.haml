

#login_body.col-md-6
#login_form.panel.panel-primary
  .panel-heading.upper-panel-heading
    #{"#{@customer.name}"} 
    %span.customer_panel_heading
      Currently Running Version: #{"#{@customer.deployments.includes(:release).order('deploy_date desc').first.try(:release).try(:version)}"}
  .pannel-body
  .tabbable
    / Only required for left/right tabs
    %ul.nav.nav-tabs
      %li.active
        %a{"data-toggle" => "tab", :href => "#tab1"} Edit #{"#{@customer.name}"}
      %li
        %a{"data-toggle" => "tab", :href => "#tab2"} Add Deployment for #{"#{@customer.name}"}      
      %li
        %a{"data-toggle" => "tab", :href => "#tab3"} Submit an Issue
    .tab-content
      #tab1.tab-pane.active
        = render 'form'
      #tab2.tab-pane
        = render 'deployments/form'      
      #tab3.tab-pane
        = render 'issues/form'
#login_body.col-md-6
#login_form.panel.panel-secondary
  .panel-heading Issues Submitted by #{"#{@customer.name}"} 
    
  .pannel-body
  .tabbable
    / Only required for left/right tabs
    %ul.nav.nav-tabs
      %li.active
        %a{"data-toggle" => "tab", :href => "#tab4"} Open Issues
      %li
        %a{"data-toggle" => "tab", :href => "#tab5"} Closed Issues

    .tab-content
      #tab4.tab-pane.active
        %table.table.table-striped
          - if @issues.where(:status => "new").length > 0 or @issues.where(:status => "assigned").length > 0 or @issues.where(:status => "resolved").length > 0 
            %thead
              %tr
                %th Title
                %th=sort_link @search, :reported_date, "Date Reported"
                %th=sort_link @search, :status, "Status"
                %th=sort_link @search, :software_version, "Version"
                %th=sort_link @search, :severity, "Severity"
            %tbody
              - @issues.each do |issue|
                - if issue.status == "new" or issue.status == "assigned" or issue.status == "resolved"
                  %tr
                    %td= link_to issue.title, edit_issue_path(issue)
                    %td= issue.reported_date
                    %td{:class => "#{issue.status}" }= issue.status
                    %td= issue.software_version
                    %td{:class => "#{issue.severity}" }= issue.severity
          - elsif @issues.where(:status => "new").length == 0 or @issues.where(:status => "assigned").length == 0 or @issues.where(:status => "resolved").length == 0 
            = render "issues/issue_table_body"

      #tab5.tab-pane
        %table.table.table-striped 
          - if @issues.where(:status => "closed").length > 0 
            %thead
              %tr
                %th Title
                %th=sort_link @search, :reported_date, "Date Reported"
                %th=sort_link @search, :status, "Status"
                %th=sort_link @search, :software_version, "Version"
                %th=sort_link @search, :severity, "Severity"
            %tbody
              - @issues.each do |issue|
                - if issue.status == "closed"
                  %tr
                    %td= link_to issue.title, edit_issue_path(issue)
                    %td= issue.reported_date
                    %td{:class => "#{issue.status}" }
                      = issue.status
                      =content_tag(:i,nil, :class=>"fa fa-check")
                    %td= issue.software_version
                    %td{:class => "#{issue.severity}" }= issue.severity
          - elsif @issues.where(:status => "closed").length == 0 
            = render "issues/issue_table_body"
  


%span.btn.btn-default.btn-xs
  = link_to customers_path do 
    %i.fa.fa-long-arrow-left
    Back
	
%span
  = link_to content_tag(:i,nil, :class=>"fa fa-trash-o"), @customer, method: :delete, data: { confirm: 'Are you sure?' }, :class => "btn btn-default btn-sm"


